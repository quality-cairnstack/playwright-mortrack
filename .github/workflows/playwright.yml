name: E2E Playwright

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      BASE_URL: ${{ vars.BASE_URL || secrets.BASE_URL }}
      E2E_LOGIN_EMAIL: ${{ secrets.E2E_LOGIN_EMAIL }}
      E2E_LOGIN_PASSWORD: ${{ secrets.E2E_LOGIN_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Install Playwright browsers (full)
        if: ${{ github.event_name != 'schedule' }}
        run: npx playwright install --with-deps

      - name: Install Playwright browsers (chromium only for schedule)
        if: ${{ github.event_name == 'schedule' }}
        run: npx playwright install --with-deps chromium

      - name: Run Playwright tests (all projects)
        if: ${{ github.event_name != 'schedule' }}
        run: npx playwright test

      - name: Run Playwright tests (chromium only on schedule)
        if: ${{ github.event_name == 'schedule' }}
        run: npx playwright test --project=chromium

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore
          retention-days: 14

      - name: Upload test results (videos, traces, screenshots)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            test-results/**
          if-no-files-found: ignore
          retention-days: 14

      - name: Check SMTP secrets
        id: check_smtp
        if: ${{ always() }}
        run: |
          missing=0
          for v in SMTP_SERVER SMTP_PORT SMTP_USERNAME SMTP_PASSWORD MAIL_FROM MAIL_TO; do
            val=$(printenv "$v")
            if [ -z "$val" ]; then
              echo "Missing $v" >&2
              missing=1
            fi
          done
          if [ "$missing" -eq 0 ]; then
            echo "has_smtp=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_smtp=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_TO: ${{ secrets.MAIL_TO }}

      - name: Package HTML report if failed
        if: failure()
        run: |
          if [ -d playwright-report ]; then
            tar -czf playwright-report.tgz playwright-report || true
          fi

      - name: Email on failure
        if: ${{ failure() && steps.check_smtp.outputs.has_smtp == 'true' }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          secure: ${{ secrets.SMTP_PORT == '465' }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Playwright FAILED: ${{ github.repository }} (#${{ github.run_number }})"
          to: ${{ secrets.MAIL_TO }}
          from: ${{ secrets.MAIL_FROM }}
          content_type: text/plain
          body: |
            Playwright tests failed on ${{ github.repository }}.
            Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Commit: ${{ github.sha }}
            Branch: ${{ github.ref_name }}
          attachments: |
            playwright-report.tgz

      - name: "Notice: SMTP secrets missing; relying on GitHub notifications"
        if: ${{ failure() && steps.check_smtp.outputs.has_smtp != 'true' }}
        run: |
          echo "Tests failed but SMTP secrets are not configured."
          echo "Configure SMTP_SERVER, SMTP_PORT, SMTP_USERNAME, SMTP_PASSWORD, MAIL_FROM, MAIL_TO to enable email sending."
